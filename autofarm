local lp = game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

for _,part in pairs(game.Workspace:GetDescendants()) do
    if part:IsA("BasePart") and (part.Name == "BenchSeat" or part.Name == "Seat" or part.Name == "PrioritySeat" or part.Name == "BackSeats") then
        part:Destroy()
    end
end

local function equipTool(toolName)
    local tool
    if game.Players.LocalPlayer.Backpack:FindFirstChild("GoldenMop") then
        tool = game.Players.LocalPlayer.Backpack:FindFirstChild("GoldenMop")
    else
        tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolName) or game.Players.LocalPlayer.Character:FindFirstChild(toolName)
    end
    if tool then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end

equipTool("Mop")

lp.Character.HumanoidRootPart.CFrame = CFrame.new(-6.3302331, 0.694394946, -368.500946)

wait(3.5)

local function getSpill()
    local dist, thing = math.huge
    local success, workspace = pcall(function() return game:GetService("Workspace") end)
    if not success then
        error("Failed to access Workspace")
    end
    local spills = workspace.SpillAssets.Spills
    if not spills then
        error("Failed to access Spills")
    end
    for i, v in pairs(spills:GetChildren()) do
        if v.Name == "Spill" then
            -- Check if the spill has a group of models called "WetFloorSign" inside of it, and skip it if it does
            local hasWetFloorSign = false
            for _, child in ipairs(v:GetChildren()) do
                if child.Name == "WetFloorSign" and child:IsA("Model") then
                    hasWetFloorSign = true
                    break
                end
            end

            if not hasWetFloorSign then
                local humanoidRootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
                if not humanoidRootPart then
                    error("Failed to access HumanoidRootPart")
                end
                local mag = (humanoidRootPart.Position - v.Position).magnitude
                if mag < dist then 
                    dist = mag 
                    thing = v 
                end
            end
        end
    end
    if not thing then
        error("Failed to find a spill")
    end
    return thing
end

while true do
    local currentSpill = getSpill()
    if currentSpill then
        lp.Character.HumanoidRootPart.CFrame = currentSpill.CFrame
    end
    wait(0.5)
end
